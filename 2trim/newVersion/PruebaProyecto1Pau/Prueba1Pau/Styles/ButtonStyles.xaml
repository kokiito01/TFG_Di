<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,20,0,5" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4,0,0,0" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,20,0,5"/>
                <Setter Property="Background" Value="{StaticResource isMouseOverNavigationMenu}"/>
                <Setter Property="Foreground" Value="{StaticResource foregroundColor}"/>
                <!--<Setter Property="BorderBrush" Value="HotPink"/>-->
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,20,0,5"/>
                <Setter Property="Background" Value="{StaticResource isMouseOverNavigationMenu}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <!--<Setter Property="BorderBrush" Value="HotPink"/>-->
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    
    <!--menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        
    </Style>

    <!-- ******************ESTILO BOTÓN PANEL DE CONTROL****************** -->
    
    
    <Style x:Key="controlButton" TargetType="Button">
        <!--Control bar button style-->
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource pnlActivateColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--menu button icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <!--Vinculamos el color del icono a la propiedad del color de primer plano del botón: Foreground-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>


    <!--Icon button style-->
    <Style x:Key="iconButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--menu button icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <!--Vinculamos el color del icono a la propiedad del color de primer plano del botón: Foreground-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>



       
    <!--BOTONES ANTERIOR SIGUIENTE TUTORIAL-->
    <Style x:Key="buttonContentMain" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#3D0354"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="150" Height="40" CornerRadius="20" Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#612F75"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- BOTÓN CUSTOM MESSAGE BOX -->
    <Style x:Key="buttonMessageBox" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#462AD8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="60" Height="30" CornerRadius="20" Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#612F75"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--SCROLL BAR--><!-- NO FUNCIONA--> 
    <Style x:Key="CustomScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <Border x:Name="PART_ScrollViewerBorder"
                            Background="Transparent"
                            CornerRadius="10"
                            Grid.Column="1">
                            <Grid>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Background="{StaticResource colorNavMenuSolid}">
                                </ScrollBar>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

<!--TEXT BLOCK Y TEXT BOX REGISTERVIEW-->
    <Style x:Key="txtBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,35,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>

    </Style>
    <Style x:Key="txtBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Padding" Value="20,0,0,0"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/images/fondoTransparente.png" Stretch="None" AlignmentX="Left"/>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>
